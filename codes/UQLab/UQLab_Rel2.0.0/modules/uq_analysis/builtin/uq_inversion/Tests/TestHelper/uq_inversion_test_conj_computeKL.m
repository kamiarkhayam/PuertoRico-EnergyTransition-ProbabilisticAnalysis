function KLDiv = uq_inversion_test_conj_computeKL(BayesianModel,Conj)
% UQ_INVERSION_TEST_CONJ_COMPUTEKL estimates the KL-divergence between 
%   the analytical Gaussian posterior and samples generated by the 
%   inversion module. Used in many selftests of the Bayesian inversion
%   module.
%
%   See also: UQ_SELFTEST_UQ_INVERSION, UQ_INVERSION_TEST_CONJ_SETUP_M1,
%             UQ_INVERSION_TEST_CONJ_SETUP_M2

%extract information from input
if strcmp(BayesianModel.Options.Solver.Type,'MCMC')
    nDim = size(BayesianModel.Results.Sample,2);
    CombinedSamples = reshape(permute(BayesianModel.Results.Sample(floor(end/2):end,:,:),[2 1 3]),nDim,[]).';
    Approx.Mean = mean(CombinedSamples);
    Approx.Cov = cov(CombinedSamples);
elseif strcmp(BayesianModel.Options.Solver.Type,'SLE')
    Approx.Mean = BayesianModel.Results.PostProc.Mean(1,:);
    Approx.Cov = BayesianModel.Results.PostProc.Covariance(:,:);
    nDim = size(Approx.Mean,2);
elseif strcmp(BayesianModel.Options.Solver.Type,'SSLE')
    Approx.Mean = BayesianModel.Results.PostProc.Mean(end,:);
    Approx.Cov = BayesianModel.Results.PostProc.Covariance(:,:,end);
    nDim = size(Approx.Mean,2);
end

%compute divergence
cov1 = Conj.posteriorVariance;
cov2 = Approx.Cov;
mu1 = Conj.posteriorMean;
mu2 = Approx.Mean;
KLDiv = 1/2*(log(det(cov2)/det(cov1)) - nDim + ...
    trace(cov2\cov1) + (mu2-mu1)*(cov2\(mu2.'-mu1.')));

